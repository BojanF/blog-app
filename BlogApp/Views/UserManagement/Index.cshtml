@using Microsoft.AspNetCore.Identity;
@using BlogApp.Models;
<!--model BlogApp.ViewModels.UserManagementIndexViewModel-->
@model BlogApp.Special.PaginatedList<BlogApp.Models.ApplicationUser>
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = "User Managment Page";
}

<div class="container-fluid">

    <table class="table">
        <thead>
            <tr>
                <td><strong>Username</strong></td>
                <td><strong>Roles</strong></td>
                <td><strong>Options</strong></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@(string.Join(",",await userManager.GetRolesAsync(user)))</td>
                    <td><a asp-controller="UserManagement" 
                           asp-action="AddRole" 
                           asp-route-id="@user.Id"
                           class="btn btn-xs btn-success">
                        Make user Admin</a></td>
                </tr>

            }
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
        </tbody>
    </table>
    <!-- Pager -->
    <ul class="pager">
        <li class="previous">
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex - 1)"
               class="btn btn-default @prevDisabled">
                &larr;
                Previous
            </a>
        </li>
        <li class="next">
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               class="btn btn-default @nextDisabled">
                Next
                &rarr;
            </a>
        </li>
    </ul>
</div>